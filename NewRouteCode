void volt_chas(double l_pwr, double r_pwr) {
    mtr_chasBL.move_voltage(l_pwr);
    mtr_chasFL.move_voltage(l_pwr);
    mtr_chasBR.move_voltage(r_pwr);
    mtr_chasFR.move_voltage(r_pwr);
  }

  double feedforward(double value, double gain, double intercept) {
    return value * gain + intercept;
  }

  void forward(double target, double cruise_v, double accel, bool reverse) {
    PIV chassis_piv(KP_FWD, KI_FWD, KV_FWD);
    PID turn_pid(KP_TURN, 0, KD_TURN);
    Motion_Profile profile(std::abs(cruise_v),std::abs(accel));
    double projected_pos = 0, projected_velo = 0, projected_accel = 0;

    double voltage = 0;
    double velocity = 0;
    double prev_encoder_avg = 0;
    double encoder_avg = 0;

    double imu_offset = imu.get_yaw();
    double angle = 0;
    double angle_volt = 0;

    enc_l.reset();
    enc_r.reset();
